# データファイルの操作とリファレンスの引き方
- 組み込みクラス
 - rubyがもともと持っているクラス StringとかHashとか 組み込みクラス自体も継承関係を持つ
- 継承
 - 親クラスのメソッドを引き継ぎ、メソッドを追加したり、元の内容を変えてしまうことも出来る
- ミキシン
 - メソッドの集まりであるモジュール（インスタンス化できないclassのようなもの）が持つメソッドを、任意のクラスが持つ状態にする
- レコードとフィールド
 - 「いつどこで誰と何した」がレコード、「いつ」「誰」などがフィールド
- JSON
 - ブラウザとサーバ間のデータ交換では、jsで簡単に読み書きできるjson形式が好まれる
- YAML
 - 空白とコロンでテキストを作る記法
- CSVとTSV
 - カンマ区切りテキストとタブ区切りテキスト
- 2次元配列と多次元配列
- ライブラリの参照先は、グローバル関数に書いてある。そこを狂わせたくなければ原則グローバル関数を作るな

# 日付、時刻とライブラリの活用
- Timeオブジェクトはある時点を示すストックの情報を保持する
- Dateはライブラリ
- ライブラリのロードにはrequire関数を使う
- $:は、ライブラリをロードするためにrubyが参照するディレクトリ名

# ネットワークライブラリと例外処理
- プロトコル
 - 通信相手と正しく対話するための決まり事
- rubyは、プログラム実行時にエラーを見受けると、エラーを占めるオブジェクトを作成し、それを関数やメソッドの呼び出し元へ送る
- このオブジェクトを受け取らないと、実行は中断する
- 例外を受け取ってなんらかの処理をすることを例外処理という
- ensureは例外有無にかかわらず実行される

# 永続化と圧縮
- Marshalモジュールには、オブジェクトの永続化に利用するメソッドが定義されている
- dumpメソッドは、オブジェクトをビット列に変換して出力する
- loadメソッドは、ビット列からオブジェクトを復元する
- 連長圧縮
 - 繰り返しを省略記号で置き換える圧縮方法

# ハッシュと暗号
- あるデータを操作して、そのデータの像となる値を得ることをハッシュという
- 暗号化の目的は、データの秘匿、なりすまし防御、改ざん防止

# 状態遷移と正規表現
- 状態遷移表を作って、使い回しや途中変更が容易な、普遍的な設計にする
- 正規表現は調べ方さえ知っておけば良さそう

# アルゴリズムと計算量
- 選択ソート
 - 全てのデータをなめて、最も小さいものから順に別の領域に放り込む
- バブルソート
 - 隣り合った2つのデータを左から調べ、右のほうが左より小さければ、その2つを入れ替えるという作業を繰り返す。入れ替えが行われない回があれば終了する
- データ件数と処理速度の関係を計算量と言う、
- クイックソート
 - ソート範囲のデータ件数が1件なら何もせず戻る、枢軸を選ぶ、その枢軸以下の部分と以上の部分に分割する、さらに各分割部分に対して同じ処理を繰り返す
- アルゴリズムは、どう解くか？という手順、理屈自体のこと。理屈が良ければ実際に処理の速度も変わる。日本語から機械が理解できるような言葉に置き換える。計算量や効率を考えて、アルゴリズムを作れるようにしろ
